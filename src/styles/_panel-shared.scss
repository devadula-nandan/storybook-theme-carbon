@use "@carbon/layout" as *;
@use "@carbon/styles/scss/theme" as *;
@use "mixins" as *;

/**
 * SHARED PANEL COMPONENT STYLES
 * Reusable styles for buttons, form controls, and common panel elements
 */

/**
 * Standard Panel Button
 * Used throughout panel tabs (Controls, A11y, etc.)
 */
@mixin panel-button($size: 'small') {
  @include button-size($size);
  @include button-complete;
}

/**
 * Form Control Base Styles
 * Shared styling for inputs, textareas, and selects
 */
@mixin form-control-base {
  @include input-field;
  @include input-border-bottom;
}

/**
 * Form Control Group
 * Styles for button, input, textarea, and select elements
 */
@mixin form-controls {
  button,
  input:not([type="radio"]):not([type="checkbox"]),
  textarea,
  select {
    border-radius: 0;
    box-shadow: none;
    background-color: $layer-01;
  }

  input:not([type="radio"]):not([type="checkbox"]):not([type="range"]),
  textarea,
  select {
    @include input-border-bottom;
  }

  input:not([type="radio"]):not([type="checkbox"])::placeholder,
  textarea::placeholder,
  select::placeholder {
    color: $text-secondary;
  }

  button:hover,
  input:not([type="radio"]):not([type="checkbox"]):hover,
  textarea:hover,
  select:hover {
    background-color: $layer-hover-01;
  }

  button:active,
  input:not([type="radio"]):not([type="checkbox"]):active,
  textarea:active,
  select:active {
    background-color: $layer-active-01;
  }

  button:focus,
  input:not([type="radio"]):not([type="checkbox"]):focus,
  textarea:focus,
  select:focus {
    @include focus-state;
  }
}

/**
 * Custom Radio Button
 * Carbon-styled radio input
 */
@mixin radio-button {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  width: 1rem;
  height: 1rem;
  border-radius: 50%;
  border: 1px solid $icon-primary;
  background-color: $background;
  cursor: pointer;
  position: relative;
  transition:
    border-color 0.15s,
    background-color 0.15s,
    box-shadow 0.15s;

  &:checked::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0.5rem;
    height: 0.5rem;
    border-radius: 50%;
    background-color: $icon-primary;
    transform: translate(-50%, -50%);
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px $focus;
  }
}

/**
 * Toggle Switch Styles
 * Custom styling for switch role inputs
 */
@mixin toggle-switch {
  input[role="switch"]:checked ~ span:last-of-type,
  input[role="switch"]:not(:checked) ~ span:first-of-type {
    background-color: $layer-01;
    box-shadow: inset 0 0 0 1px $border-strong-01;
  }

  label:has(input[role="switch"]) {
    background-color: $background;
  }

  input[role="switch"]:focus {
    box-shadow: 0 0 0 2px $focus !important;
  }
}

/**
 * Date/Time Input Color Scheme
 * Adjusts color scheme based on theme
 */
@mixin date-time-inputs {
  input[type="date"],
  input[type="time"] {
    color-scheme: light;
  }

  :root[storybook-carbon-theme="g90"] &,
  :root[storybook-carbon-theme="g100"] & {
    input[type="date"],
    input[type="time"] {
      color-scheme: dark;
    }
  }
}
